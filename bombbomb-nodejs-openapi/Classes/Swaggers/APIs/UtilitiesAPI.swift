//
// UtilitiesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class UtilitiesAPI: APIBase {
    /**
     Create an OAuth Client
     
     - parameter name: (form) The name of the OAuth client. e.g. MyCrm DEV, or MyCrm PROD 
     - parameter redirectUri: (form) The URI to direct the client to after logging in. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createOAuthClient(name name: String, redirectUri: String, completion: ((data: OAuthClient?, error: ErrorType?) -> Void)) {
        createOAuthClientWithRequestBuilder(name: name, redirectUri: redirectUri).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create an OAuth Client
     - POST /oauthclient
     - Creates an OAuth Client managed by the user
     - OAuth:
       - type: oauth2
       - name: BBOAuth2
     - examples: [{example={
  "grantsAllowed" : "aeiou",
  "owningUserId" : "aeiou",
  "name" : "aeiou",
  "redirectUri" : "aeiou",
  "clientSecret" : "aeiou",
  "identifier" : "aeiou"
}, contentType=application/json}]
     
     - parameter name: (form) The name of the OAuth client. e.g. MyCrm DEV, or MyCrm PROD 
     - parameter redirectUri: (form) The URI to direct the client to after logging in. 

     - returns: RequestBuilder<OAuthClient> 
     */
    public class func createOAuthClientWithRequestBuilder(name name: String, redirectUri: String) -> RequestBuilder<OAuthClient> {
        let path = "/oauthclient"
        let URLString = bombbomb-nodejs-openapiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "name": name,
            "redirectUri": redirectUri
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<OAuthClient>.Type = bombbomb-nodejs-openapiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Delete an OAuth Client
     
     - parameter id: (path) The id of the OAuth Client 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteOAuthClient(id id: String, completion: ((error: ErrorType?) -> Void)) {
        deleteOAuthClientWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete an OAuth Client
     - DELETE /oauthclient/{id}
     - Deletes an OAuth Client managed by the user
     - OAuth:
       - type: oauth2
       - name: BBOAuth2
     
     - parameter id: (path) The id of the OAuth Client 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteOAuthClientWithRequestBuilder(id id: String) -> RequestBuilder<Void> {
        var path = "/oauthclient/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = bombbomb-nodejs-openapiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = bombbomb-nodejs-openapiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Lists OAuth Clients
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOAuthClients(completion: ((data: [OAuthClient]?, error: ErrorType?) -> Void)) {
        getOAuthClientsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Lists OAuth Clients
     - GET /oauthclient
     - Enumerates OAuth Clients managed by the user
     - OAuth:
       - type: oauth2
       - name: BBOAuth2
     - examples: [{example=[ {
  "grantsAllowed" : "aeiou",
  "owningUserId" : "aeiou",
  "name" : "aeiou",
  "redirectUri" : "aeiou",
  "clientSecret" : "aeiou",
  "identifier" : "aeiou"
} ], contentType=application/json}]

     - returns: RequestBuilder<[OAuthClient]> 
     */
    public class func getOAuthClientsWithRequestBuilder() -> RequestBuilder<[OAuthClient]> {
        let path = "/oauthclient"
        let URLString = bombbomb-nodejs-openapiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[OAuthClient]>.Type = bombbomb-nodejs-openapiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Describes this api
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getSpec(completion: ((error: ErrorType?) -> Void)) {
        getSpecWithRequestBuilder().execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Describes this api
     - GET /spec
     - Describes methods available through the API.

     - returns: RequestBuilder<Void> 
     */
    public class func getSpecWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/spec"
        let URLString = bombbomb-nodejs-openapiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = bombbomb-nodejs-openapiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
