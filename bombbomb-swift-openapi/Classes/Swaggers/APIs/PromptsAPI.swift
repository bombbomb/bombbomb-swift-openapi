//
// PromptsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class PromptsAPI: APIBase {
    /**
     Prompts user to send a video
     
     - parameter prompt: (body) The Video Email Prompt to be created 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createVideoEmailPrompt(prompt prompt: VideoEmailPrompt, completion: ((data: VideoEmailPrompt?, error: ErrorType?) -> Void)) {
        createVideoEmailPromptWithRequestBuilder(prompt: prompt).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Prompts user to send a video
     - POST /prompt
     - Sends the account holder an email prompting them to add a video to a scheduled outgoing message. Recipients, content and timing is all preset for the user.
     - OAuth:
       - type: oauth2
       - name: BBOAuth2
     - examples: [{example={
  "jobId" : "aeiou",
  "sendWithoutVideo" : true,
  "status" : "",
  "id" : "aeiou",
  "templateId" : "aeiou",
  "jerichoId" : "aeiou",
  "emailId" : "aeiou",
  "promptHtml" : "aeiou",
  "videoDueDate" : "2000-01-23T04:56:07.000+00:00",
  "emailSubjectLine" : "aeiou",
  "toLists" : [ "aeiou" ],
  "emailContent" : "aeiou",
  "videoId" : "aeiou",
  "userId" : "aeiou",
  "doNotApplyTemplate" : true,
  "scheduledSendDate" : "2000-01-23T04:56:07.000+00:00",
  "toEmailAddresses" : [ "aeiou" ],
  "promptSubject" : "aeiou"
}, contentType=application/json}]
     
     - parameter prompt: (body) The Video Email Prompt to be created 

     - returns: RequestBuilder<VideoEmailPrompt> 
     */
    public class func createVideoEmailPromptWithRequestBuilder(prompt prompt: VideoEmailPrompt) -> RequestBuilder<VideoEmailPrompt> {
        let path = "/prompt"
        let URLString = bombbomb-swift-openapiAPI.basePath + path
        let parameters = prompt.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VideoEmailPrompt>.Type = bombbomb-swift-openapiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets a prompt
     
     - parameter id: (path) The Id of the prompt 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getVideoEmailPrompt(id id: String, completion: ((data: VideoEmailPrompt?, error: ErrorType?) -> Void)) {
        getVideoEmailPromptWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a prompt
     - GET /prompt/{id}
     - Gets a prompt
     - OAuth:
       - type: oauth2
       - name: BBOAuth2
     - examples: [{example={
  "jobId" : "aeiou",
  "sendWithoutVideo" : true,
  "status" : "",
  "id" : "aeiou",
  "templateId" : "aeiou",
  "jerichoId" : "aeiou",
  "emailId" : "aeiou",
  "promptHtml" : "aeiou",
  "videoDueDate" : "2000-01-23T04:56:07.000+00:00",
  "emailSubjectLine" : "aeiou",
  "toLists" : [ "aeiou" ],
  "emailContent" : "aeiou",
  "videoId" : "aeiou",
  "userId" : "aeiou",
  "doNotApplyTemplate" : true,
  "scheduledSendDate" : "2000-01-23T04:56:07.000+00:00",
  "toEmailAddresses" : [ "aeiou" ],
  "promptSubject" : "aeiou"
}, contentType=application/json}]
     
     - parameter id: (path) The Id of the prompt 

     - returns: RequestBuilder<VideoEmailPrompt> 
     */
    public class func getVideoEmailPromptWithRequestBuilder(id id: String) -> RequestBuilder<VideoEmailPrompt> {
        var path = "/prompt/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = bombbomb-swift-openapiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VideoEmailPrompt>.Type = bombbomb-swift-openapiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     * enum for parameter choice
     */
    public enum Choice_respondToVideoEmailPrompt: String { 
        case WithVideo = "WithVideo"
        case WithoutVideo = "WithoutVideo"
        case Cancel = "Cancel"
    }

    /**
     Respond to a prompt
     
     - parameter id: (path) The id of the prompt. 
     - parameter choice: (form) The users&#39; selection. Can be: WithVideo, WithoutVideo, Cancel 
     - parameter videoId: (form) The id of the video. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func respondToVideoEmailPrompt(id id: String, choice: Choice_respondToVideoEmailPrompt, videoId: String? = nil, completion: ((data: VideoEmailPrompt?, error: ErrorType?) -> Void)) {
        respondToVideoEmailPromptWithRequestBuilder(id: id, choice: choice, videoId: videoId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Respond to a prompt
     - POST /prompt/{id}/response
     - Respond to a prompt by either adding a video, sending without a video or cancelling the prompt.
     - examples: [{example={
  "jobId" : "aeiou",
  "sendWithoutVideo" : true,
  "status" : "",
  "id" : "aeiou",
  "templateId" : "aeiou",
  "jerichoId" : "aeiou",
  "emailId" : "aeiou",
  "promptHtml" : "aeiou",
  "videoDueDate" : "2000-01-23T04:56:07.000+00:00",
  "emailSubjectLine" : "aeiou",
  "toLists" : [ "aeiou" ],
  "emailContent" : "aeiou",
  "videoId" : "aeiou",
  "userId" : "aeiou",
  "doNotApplyTemplate" : true,
  "scheduledSendDate" : "2000-01-23T04:56:07.000+00:00",
  "toEmailAddresses" : [ "aeiou" ],
  "promptSubject" : "aeiou"
}, contentType=application/json}]
     
     - parameter id: (path) The id of the prompt. 
     - parameter choice: (form) The users&#39; selection. Can be: WithVideo, WithoutVideo, Cancel 
     - parameter videoId: (form) The id of the video. (optional)

     - returns: RequestBuilder<VideoEmailPrompt> 
     */
    public class func respondToVideoEmailPromptWithRequestBuilder(id id: String, choice: Choice_respondToVideoEmailPrompt, videoId: String? = nil) -> RequestBuilder<VideoEmailPrompt> {
        var path = "/prompt/{id}/response"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = bombbomb-swift-openapiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "videoId": videoId,
            "choice": choice.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VideoEmailPrompt>.Type = bombbomb-swift-openapiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
