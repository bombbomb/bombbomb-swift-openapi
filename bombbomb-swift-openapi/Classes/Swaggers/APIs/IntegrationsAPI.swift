//
// IntegrationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class IntegrationsAPI: APIBase {
    /**
     Synchronize your integration list or lists.
     
     - parameter integrationId: (query) The integration to sync lists for. All integrations will sync if nothing is provided. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func syncUsersIntegratedLists(integrationId integrationId: String? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        syncUsersIntegratedListsWithRequestBuilder(integrationId: integrationId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Synchronize your integration list or lists.
     - GET /integrations/sync
     - Synchronize your integration contact list with the service you are integrated with. If no integration code is provided, all integrations will be synchronized.
     - OAuth:
       - type: oauth2
       - name: BBOAuth2
     - examples: [{example="aeiou", contentType=application/json}]
     
     - parameter integrationId: (query) The integration to sync lists for. All integrations will sync if nothing is provided. (optional)

     - returns: RequestBuilder<String> 
     */
    public class func syncUsersIntegratedListsWithRequestBuilder(integrationId integrationId: String? = nil) -> RequestBuilder<String> {
        let path = "/integrations/sync"
        let URLString = bombbomb-swift-openapiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "integration_id": integrationId
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = bombbomb-swift-openapiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
